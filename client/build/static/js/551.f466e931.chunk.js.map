{"version":3,"file":"static/js/551.f466e931.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/Signup/Signup.module.scss?1596","apis/users.tsx","pages/Signup/Signup.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Signup_form__djdYU\"};","import { User } from \"interfaces\";\nimport { ObjectId } from \"types\";\n\nconst USERS_API = '/api/users';\n/*export async function getUsers(queryParam) {\n}\nexport async function getUser(_id) {\n   \n}*/\nexport async function deleteUser(_id: ObjectId): Promise<ObjectId> {\n    const response = await fetch(`${USERS_API}/${_id}`, {\n        method: 'DELETE',\n    });\n    if (response.ok) {\n        return _id;\n    } else {\n        throw new Error('Error delete user');\n    }\n\n}\nexport async function updatedUser(updatedUser: User): Promise<User> {\n\n    const { _id, ...restUser } = updatedUser\n    const response = await fetch(`${USERS_API}/${_id}`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(restUser)\n    });\n    if (response.ok) {\n        return response.json();\n    } else {\n        throw new Error('Error update usr')\n    }\n}\n\nexport async function createUser(newUser?: Partial<User>): Promise<User> {\n    console.log(USERS_API);\n    const response = await fetch(`${USERS_API}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUser)\n    });\n    const body = await response.json();\n    if (response.ok) {\n        return body;\n    } else {\n        if (body) {\n            throw body;\n        } else {\n            throw new Error('Error api creatUser');\n        }\n    }\n}","import { useForm } from 'react-hook-form';\nimport styles from './Signup.module.scss';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { createUser } from '../../apis/users';\nimport { useNavigate } from 'react-router-dom';\nimport { LoginForm } from 'interfaces';\ninterface SignupProps {};\nexport default function Signup(props: SignupProps) {\n    const navigate = useNavigate();\n    const validationSchema = yup.object({\n        name: yup.string().required('Précisez votre nom svp').min(2, 'au moins 2 caractères !!'),\n        email: yup.string().required('il faut renseigner email').email('l\\'email n\\'est pas valide'),\n        password: yup.string().required('Renseignez un mdp svp').min(6, 'au moins 6 caractères')\n    });\n\n    const initialValues: Partial<LoginForm> = {\n        name: '',\n        email: '',\n        password: ''\n    }\n    const {\n        handleSubmit,\n        register,\n        formState: { errors, isSubmitting},\n        setError,\n        clearErrors,\n    } = useForm({\n        defaultValues: initialValues,\n        resolver: yupResolver(validationSchema)\n    });\n    const submit = handleSubmit(async( user) => {\n            try {\n                clearErrors();\n                await createUser (user);\n                navigate('/signin');\n            } catch (error) {\n                const message = (error as Error).message; \n                setError('generic', { type: 'generic', message })\n            }\n        }\n    );\n    return (\n        <div className=\"flex-fill d-flex align-items-center justify-content-center\">\n            <form onSubmit={ submit }className={ `${ styles.form } d-flex flex-column card p-20`} >\n                <h2 className='mb-10'>Inscription</h2>\n                <div className='mb-10 d-flex flex-column'>\n                    <label htmlFor='name'>Nom</label>\n                    <input type=\"text\" id=\"name\" { ...register('name')}/>\n                    { errors.name && <p className='form-error'>{ errors.name.message }</p>}\n                </div>\n                <div className='mb-10 d-flex flex-column'>\n                    <label htmlFor='email'>Email</label>\n                    <input type=\"text\" id=\"email\"   { ...register('email')}/>\n                    { errors.email && <p className='form-error'>{ errors.email.message}</p>}\n                </div>\n                <div className='mb-10 d-flex flex-column'>\n                    <label htmlFor='name'>Password</label>\n                    <input type=\"text\" id=\"password\" { ...register('password')} />\n                    { errors?.password && <p className='form-error'>{ errors.password.message}</p>}\n                </div>\n                { errors?.generic && (\n                    <div className='mb-10'>\n                        <p className='form-error'>{ errors.generic.message }</p>\n                   </div>\n                )}\n                <div>\n                    <button disabled={isSubmitting} className='btn btn-primary'> Inscription</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"names":["USERS_API","createUser","_x3","_createUser","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","newUser","response","body","wrap","_context3","prev","next","console","log","fetch","concat","method","headers","JSON","stringify","sent","json","ok","abrupt","Error","stop","Signup","props","navigate","useNavigate","validationSchema","yup","name","required","min","email","password","_useForm","useForm","defaultValues","resolver","yupResolver","handleSubmit","register","_useForm$formState","formState","errors","isSubmitting","setError","clearErrors","submit","_ref","_callee","user","message","_context","t0","type","_x","_jsx","className","children","_jsxs","onSubmit","styles","htmlFor","_objectSpread","id","generic","disabled"],"sourceRoot":""}