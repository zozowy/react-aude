{"version":3,"file":"static/js/694.b7bdadca.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/Admin/pages/AdminRecipes/pages/AdminRecipesForm/AdminRecipeForm.module.scss?947c","pages/Admin/pages/AdminRecipes/pages/AdminRecipesForm/AdminRecipesForm.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"RecipeForm\":\"AdminRecipeForm_RecipeForm__c2lMI\"};","\nimport styles from './AdminRecipeForm.module.scss';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { createRecipe, updateRecipe } from 'apis';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { selectActiveRecipe } from 'state';\nimport { RecipeI } from 'interfaces';\n\n\n\nfunction AdminRecipesForm () {\n\t//const recipe = useLoaderData();\n    const { recipeId } = useParams();\n    const recipe = useRecoilValue(selectActiveRecipe(recipeId));\n\tconst navigate = useNavigate();\n    const defaultValues = {\n        title: recipe ?  recipe.title : '',\n        image: recipe ?  recipe.image : '',\n        generic: \"\"\n    }\n\n    const recipeSchema = yup.object({\n            title: yup.string().required('le titre de la recette doit être renseigné').min(10, 'Le titre doit faire 10 caractères min et 30 max').max(30, 'Le titre doit faire 10 caractères min et 30 max'),\n            image: yup.string().required('il faut renseigner une url d\\'image').url('L\\'image doit être un lien valide')\n        })\n    const {\n        formState: { errors, isSubmitting},\n        register,\n        handleSubmit,\n        reset,\n        setError,\n        clearErrors,\n    } = useForm( {\n        defaultValues,\n        resolver: yupResolver(recipeSchema),\n    });\n\n    async function submit(values: Partial<RecipeI>) {\n        try {\n            clearErrors();\n\t\t\tif (recipe) {\n\t\t\t\tawait updateRecipe({...values, _id: recipe._id });\n\t\t\t\tnavigate('/admin/recipes/list');\n\t\t\t} else {\n\t\t\t\tawait createRecipe(values);\n\t\t\t\treset(defaultValues);\n\t\t\t}\n            } catch (error) {\n\t\t\t\tsetError('generic', { type: 'generic', message: 'un erreur est survenue'})\n            }\n    }\n    return (\n        <form onSubmit={handleSubmit(submit)}\n            className={`d-flex flex-column card p-20 ${ styles.RecipeForm}`} >\n            <h2 className='mb-20' > Ajouter une recette</h2>\n            <div className='d-flex flex-column mb-20'>\n                <label >Titre de la recette</label>\n                <input {...register('title')} type='text'/>\n                { errors.title && <p className='form-error'>{ errors.title.message }</p>}\n            </div>\n            <div className='d-flex flex-column mb-20'>\n                <label>Image de la recette</label>\n                <input {...register('image')} type='text'/>\n                { errors.image && <p className='form-error'>{ errors.image.message }</p>}\n            </div>\n            { errors.generic && <p className='form-error'>{ errors.generic.message }</p>}\n            <div>\n                <button disabled={isSubmitting} className='btn btn-primary'> Sauvegarder</button>\n            </div>\n        </form>\n    )\n}\nexport default AdminRecipesForm;"],"names":["recipeId","useParams","recipe","useRecoilValue","selectActiveRecipe","navigate","useNavigate","defaultValues","title","image","generic","recipeSchema","yup","required","min","max","url","_useForm","useForm","resolver","yupResolver","_useForm$formState","formState","errors","isSubmitting","register","handleSubmit","reset","setError","clearErrors","_submit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","updateRecipe","_objectSpread","_id","createRecipe","t0","type","message","stop","apply","arguments","_jsxs","onSubmit","_x","className","concat","styles","children","_jsx","disabled"],"sourceRoot":""}